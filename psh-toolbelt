#!/usr/bin/env php
<?php

// If we're running from phar load the phar autoload file.
use Robo\Runner;
use Symfony\Component\Console\Output\ConsoleOutput;
use wearewondrous\PshToolbelt\Commands\BackupCommands;
use wearewondrous\PshToolbelt\Commands\TestCommands;
use wearewondrous\PshToolbelt\Commands\UpdateCommands;

$pharPath = \Phar::running(true);

if ($pharPath !== '') {
  $autoloaderPath = "$pharPath/vendor/autoload.php";
} else {
  if (file_exists(__DIR__.'/vendor/autoload.php')) {
    $autoloaderPath = __DIR__.'/vendor/autoload.php';
  } elseif (file_exists(__DIR__.'/../../autoload.php')) {
    $autoloaderPath = __DIR__ . '/../../autoload.php';
  } else {
    die("Could not find autoloader. Run 'composer install'.");
  }
}
$classLoader = require $autoloaderPath;

// Customization variables
$commandClasses = [
  UpdateCommands::class,
  BackupCommands::class,
  TestCommands::class,
];

// Define our Runner, and pass it the command classes we provide.
$runner = new Runner($commandClasses);
$runner
  ->setClassLoader($classLoader);

// Execute the command and return the result.
$output = new ConsoleOutput();
$statusCode = $runner->execute($argv, null, null, $output);
exit($statusCode);
